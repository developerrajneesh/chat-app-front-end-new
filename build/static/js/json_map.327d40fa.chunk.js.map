{"version":3,"file":"static/js/json_map.327d40fa.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/ZoomTools.ts","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/graticule.js","../node_modules/src/.internal/charts/map/GraticuleSeries.ts","../node_modules/src/.internal/charts/map/MapPointSeries.ts","../node_modules/src/.internal/charts/map/ClusteredPointSeries.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/lcg.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/pack/index.js"],"sourcesContent":["import { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer } from \"../../core/util/Disposer\";\r\n\r\nexport interface IZoomable {\r\n\tzoomIn(): void;\r\n\tzoomOut(): void;\r\n\tgoHome(): void;\r\n}\r\n\r\nexport interface IZoomToolsSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * A target element that zoom tools will control, e.g. [[ZoomableContainer]].\r\n\t */\r\n\ttarget?: IZoomable;\r\n\r\n}\r\n\r\nexport interface IZoomToolsPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomToolsEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n\r\n\tpublic static className: string = \"ZoomTools\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomTools.className]);\r\n\tdeclare public _events: IContainerEvents;\r\n\r\n\t/**\r\n\t * A [[Button]] for home.\r\n\t */\r\n\tpublic readonly homeButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom in.\r\n\t */\r\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom out.\r\n\t */\r\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }));\r\n\r\n\tdeclare public _settings: IZoomToolsSettings;\r\n\tdeclare public _privateSettings: IZoomToolsPrivate;\r\n\r\n\tprotected _disposer: MultiDisposer | undefined;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.set(\"position\", \"absolute\");\r\n\r\n\t\tthis.set(\"layout\", this._root.verticalLayout);\r\n\t\tthis.addTag(\"zoomtools\");\r\n\r\n\t\tthis.plusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.minusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.homeButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\t\t\tconst previous = this._prevSettings.target;\r\n\t\t\tif (target) {\r\n\t\t\t\tthis._disposer = new MultiDisposer([\r\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomIn()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomOut()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.homeButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.goHome()\r\n\t\t\t\t\t})])\r\n\t\t\t}\r\n\r\n\t\t\tif (previous && this._disposer) {\r\n\t\t\t\tthis._disposer.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate, IGraphicsEvents } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n}\n\nexport interface IMapLineEvents extends IGraphicsEvents {\n\n\t/**\n\t * Invoked when line is redrawn\n\t */\n\tlinechanged: {};\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\tdeclare public _events: IMapLineEvents;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = \"linechanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tconst geoPoint = this.positionToGeoPoint(tooltipX.value)\n\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\tif (series) {\n\t\t\t\tconst chart = series.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst point = chart.convert(geoPoint);\n\t\t\t\t\tx = point.x;\n\t\t\t\t\ty = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { x, y };\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\tclipExtent?: boolean;\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\n\t\tif (this.isDirty(\"clipExtent\")) {\n\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.events.on(\"geoboundschanged\", () => {\n\t\t\t\t\t\tthis._generate();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis._generate();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst geoBounds = chart.geoBounds();\n\t\t\t\t\tif (geoBounds) {\n\t\t\t\t\t\tgraticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst step = this.get(\"step\", 10);\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * If set to `true`, the point will be drawn according to its `x` and `y`\n\t * coordinates, not its latitude and longitude.\n\t * \n\t * Fixed points will not move together with map, and can not be used to\n\t * connect points on a `MapLineSeries`.\n\t * \n\t * @default false\n\t * @since 5.2.34\n\t */\n\tfixed?: boolean;\n\n\t/**\n\t * Point (in pixels) of a data item\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * @ignore\n\t */\n\tclipped?: boolean;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _lineChangedDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lineChangedDp) {\n\t\t\t\tthis._lineChangedDp.dispose();\n\t\t\t}\n\n\t\t\tif (line) {\n\t\t\t\tthis._lineChangedDp = line.events.on(\"linechanged\", () => {\n\t\t\t\t\tthis._positionBullets(dataItem);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tconst point = { x: xy[0], y: xy[1] };\n\t\t\t\tsprite.setAll(point);\n\t\t\t\tdataItem.setRaw(\"point\", point);\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\tdataItem.set(\"clipped\", !visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number, rotate?: boolean): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\t\t\tif (rotate) {\n\t\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\n\t\t\t}\n\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * Zooms the map in so that all points in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items of points to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.5.6\n\t */\n\tzoomToDataItems(dataItems: Array<DataItem<IMapPointSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\n\t\tlet left: number | null = null;\n\t\tlet right: number | null = null;\n\t\tlet top: number | null = null;\n\t\tlet bottom: number | null = null;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\n\t\t\tif (left == null || left > longitude) {\n\t\t\t\tleft = longitude;\n\t\t\t}\n\t\t\tif (right == null || right < longitude) {\n\t\t\t\tright = longitude;\n\t\t\t}\n\t\t\tif (top == null || top < latitude) {\n\t\t\t\ttop = latitude;\n\t\t\t}\n\t\t\tif (bottom == null || bottom > latitude) {\n\t\t\t\tbottom = latitude;\n\t\t\t}\n\t\t})\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -(left + (right - left) / 2), -(top + (top - bottom) / 2));\n\t\t\t\t}\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { MapPointSeries, IMapPointSeriesSettings, IMapPointSeriesPrivate, IMapPointSeriesDataItem } from \"./MapPointSeries\";\r\nimport { DataItem, IComponentDataItem } from \"../../core/render/Component\";\r\nimport type { Root } from \"../../core/Root\";\r\nimport type { Bullet } from \"../../core/render/Bullet\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IClusteredDataItem extends IComponentDataItem {\r\n\t/**\r\n\t * All the data items of this cluster\r\n\t */\r\n\tchildren?: Array<DataItem<IMapPointSeriesDataItem>>;\r\n\r\n\t/**\r\n\t * Bullet of clustered data item\r\n\t */\r\n\tbullet?: Bullet;\r\n}\r\n\r\nexport interface IClusteredPointSeriesDataItem extends IMapPointSeriesDataItem {\r\n\t/**\r\n\t * An ID of a bullet's group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Clustered data item (if available)\r\n\t * @readonly\r\n\t */\r\n\tcluster?: DataItem<IClusteredDataItem>;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdy?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesPrivate extends IMapPointSeriesPrivate {\r\n\r\n}\r\n\r\nexport interface IClusteredPointSeriesSettings extends IMapPointSeriesSettings {\r\n\t/**\r\n\t * Series data can contain a field with an ID of a virtual group the bullet\r\n\t * belongs to.\r\n\t *\r\n\t * For example, we migth want bullets to group with other bullets from the\r\n\t * same continent.\r\n\t *\r\n\t * `groupIdField` specifies which field in source data holds group IDs.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_segregation} for more info\r\n\t * @default groupID\r\n\t */\r\n\tgroupIdField?: string;\r\n\r\n\t/**\r\n\t * Bullets that are closer than X pixels apart, will be automatically grouped.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Minimal_distance} for more info\r\n\t * @default 20\r\n\t */\r\n\tminDistance?: number;\r\n\r\n\t/**\r\n\t * Set this to a [[Bullet]] instance which will be used to show groups.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_bullet} for more info\r\n\t */\r\n\tclusteredBullet?: (root: Root, series: ClusteredPointSeries, dataItem: DataItem<IClusteredPointSeriesDataItem>) => Bullet | undefined;\r\n\r\n\t/**\r\n\t * If bullets are closer to each other than `scatterDistance`, they will be\r\n\t * scattered so that all are visible.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 5\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterDistance?: number;\r\n\r\n\t/**\r\n\t * Presumed radius of a each bullet when scattering them.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 8\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterRadius?: number;\r\n\r\n\t/**\r\n\t * If a map is zoomed to a maxZoomLevel * stopClusterZoom, clusters will be\r\n\t * disabled.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 0.95\r\n\t * @since 5.5.7\r\n\t */\r\n\tstopClusterZoom?: number\r\n}\r\n\r\n/**\r\n * A version of [[MapPointSeries]] which can automatically group closely located\r\n * bullets into groups.\r\n * \r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/} for more info\r\n * @since 5.5.6\r\n * @important\r\n */\r\nexport class ClusteredPointSeries extends MapPointSeries {\r\n\r\n\tpublic static className: string = \"ClusteredPointSeries\";\r\n\tpublic static classNames: Array<string> = MapPointSeries.classNames.concat([ClusteredPointSeries.className]);\r\n\r\n\tdeclare public _settings: IClusteredPointSeriesSettings;\r\n\tdeclare public _privateSettings: IClusteredPointSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IClusteredPointSeriesDataItem;\r\n\r\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\r\n\tprotected _clusterIndex: number = 0;\r\n\tprotected _clusters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\tpublic clusteredDataItems: Array<DataItem<IClusteredDataItem>> = [];\r\n\r\n\tprotected _scatterIndex: number = 0;\r\n\tprotected _scatters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\r\n\tpublic _packLayout = d3hierarchy.pack();\r\n\r\n\tprotected _spiral: Array<{ x: number, y: number }> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis.fields.push(\"groupId\");\r\n\t\tthis._setRawDefault(\"groupIdField\", \"groupId\");\r\n\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"scatterRadius\")) {\r\n\t\t\tthis._spiral = $math.spiralPoints(0, 0, 300, 300, 0, 3, 3, 0, 0)\r\n\t\t}\r\n\r\n\t\tconst groups: { [index: string]: Array<DataItem<IClusteredPointSeriesDataItem>> } = {};\r\n\t\t// distribute to groups\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst groupId = dataItem.get(\"groupId\", \"_default\");\r\n\r\n\t\t\tif (!groups[groupId]) {\r\n\t\t\t\tgroups[groupId] = [];\r\n\t\t\t}\r\n\t\t\tgroups[groupId].push(dataItem);\r\n\t\t})\r\n\r\n\t\tthis._scatterIndex = -1;\r\n\t\tthis._scatters = [];\r\n\t\tthis._clusterIndex = -1;\r\n\t\tthis._clusters = [];\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"children\", undefined);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"cluster\", undefined);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._scatterGroup(group);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._clusterGroup(group);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tif (!dataItem.get(\"cluster\")) {\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the area so that all clustered data items of a cluster would be\r\n\t * visible.\r\n\t *\r\n\t * Pass in `true` as a second parameter to rotate that map so that the group\r\n\t * is in the center. This is especially useful in the maps that use\r\n\t * Orthographic (globe) projection.\r\n\t *\r\n\t * @param  dataItem  Group data item\r\n\t * @param  rotate    Rotate the map so that group is in the center?\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Drill_down} for more info\r\n\t */\r\n\tpublic zoomToCluster(dataItem: DataItem<IClusteredDataItem>, rotate?: boolean) {\r\n\t\tthis.zoomToDataItems(dataItem.get(\"children\", []), rotate);\r\n\t}\r\n\r\n\tprotected _clusterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._clusterIndex++;\r\n\t\t\t\tthis._clusters[this._clusterIndex] = [];\r\n\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tcluster.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._clusterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\t$array.each(this._clusters, (cluster) => {\r\n\t\t\tlet sumX = 0;\r\n\t\t\tlet sumY = 0;\r\n\r\n\t\t\tlet len = cluster.length;\r\n\r\n\t\t\tif (len > 1) {\r\n\r\n\t\t\t\tlet clusteredDataItem = this.clusteredDataItems[i];\r\n\t\t\t\tif (!clusteredDataItem) {\r\n\t\t\t\t\tclusteredDataItem = new DataItem(this, undefined, {});\r\n\r\n\t\t\t\t\tconst bulletMethod = this.get(\"clusteredBullet\");\r\n\t\t\t\t\tif (bulletMethod) {\r\n\t\t\t\t\t\tconst bullet = clusteredDataItem.set(\"bullet\" as any, bulletMethod(this._root, this, clusteredDataItem));\r\n\r\n\t\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\r\n\t\t\t\t\t\t\t\tsprite._setDataItem(clusteredDataItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.clusteredDataItems.push(clusteredDataItem)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.each(cluster, (dataItem) => {\r\n\t\t\t\t\tdataItem.setRaw(\"cluster\", clusteredDataItem);\r\n\r\n\t\t\t\t\tconst point = dataItem.get(\"point\");\r\n\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\tsumX += point.x;\r\n\t\t\t\t\t\tsumY += point.y;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlet averageX = sumX / len;\r\n\t\t\t\tlet averageY = sumY / len;\r\n\r\n\t\t\t\tclusteredDataItem.setRaw(\"children\" as any, cluster);\r\n\r\n\t\t\t\tconst prevLen = clusteredDataItem.get(\"value\" as any);\r\n\t\t\t\tclusteredDataItem.setRaw(\"value\" as any, len);\r\n\r\n\t\t\t\tconst bullet = clusteredDataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\tsprite.setAll({ x: averageX, y: averageY });\r\n\r\n\t\t\t\t\t\tif (prevLen != len) {\r\n\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\t\t\t\t\tchild.text.markDirtyText();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tlet children = dataItem.get(\"children\");\r\n\t\t\tif (!children || children.length == 0) {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _onDataClear() {\r\n\t\tsuper._onDataClear();\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\tif (bullet) {\r\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\tif (sprite) {\r\n\t\t\t\t\tsprite.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.clusteredDataItems = [];\r\n\r\n\t}\r\n\r\n\tprotected _clusterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\t\t\t\t\tif (diPoint) {\r\n\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < this.get(\"minDistance\", 20)) {\r\n\t\t\t\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\t\t\t\tcluster.push(di);\r\n\t\t\t\t\t\t\t$array.remove(dataItems, di);\r\n\t\t\t\t\t\t\tthis._clusterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._scatterIndex++;\r\n\t\t\t\tthis._scatters[this._scatterIndex] = [];\r\n\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tscatter.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._scatterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this._scatters, (scatter) => {\r\n\t\t\t\tlet len = scatter.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\t\t\t\t\tlet previousCircles: Array<{ x: number, y: number, radius: number }> = [];\r\n\t\t\t\t\tlet s = 0;\r\n\t\t\t\t\tlet radius = this.get(\"scatterRadius\", 8);\r\n\t\t\t\t\t$array.each(scatter, (dataItem) => {\r\n\t\t\t\t\t\tlet spiralPoint = this._spiral[s];\r\n\t\t\t\t\t\tlet intersects = true;\r\n\r\n\t\t\t\t\t\tif (previousCircles.length > 0) {\r\n\t\t\t\t\t\t\twhile (intersects) {\r\n\t\t\t\t\t\t\t\t$array.each(previousCircles, (previousCircle) => {\r\n\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\twhile ($math.circlesOverlap({ x: spiralPoint.x, y: spiralPoint.y, radius: radius }, previousCircle)) {\r\n\t\t\t\t\t\t\t\t\t\ts++;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (this._spiral[s] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\t\t\t\t\t\tspiralPoint = this._spiral[s];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst dx = spiralPoint.x;\r\n\t\t\t\t\t\tconst dy = spiralPoint.y;\r\n\r\n\t\t\t\t\t\tpreviousCircles.push({ x: dx, y: dy, radius: radius });\r\n\r\n\t\t\t\t\t\tdataItem.set(\"dx\", dx);\r\n\t\t\t\t\t\tdataItem.set(\"dy\", dy);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.setAll({ dx: dx, dy: dy });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < this.get(\"scatterDistance\", 5)) {\r\n\t\t\t\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\t\t\t\tscatter.push(di);\r\n\t\t\t\t\t\t\t$array.remove(dataItems, di);\r\n\t\t\t\t\t\t\tthis._scatterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import type { MapChart } from \"./MapChart\";\n\nimport { ZoomTools, IZoomToolsPrivate, IZoomToolsSettings } from \"../../core/render/ZoomTools\";\n\nexport interface IZoomControlSettings extends IZoomToolsSettings {\n}\n\nexport interface IZoomControlPrivate extends IZoomToolsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends ZoomTools {\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = ZoomTools.classNames.concat([ZoomControl.className]);\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.addTag(\"zoomtools\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tthis.set(\"target\", this.getPrivate(\"chart\"));\n\t\t}\n\t}\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n"],"names":["ZoomTools","Container","constructor","Object","defineProperty","this","children","push","Button","new","_root","width","height","themeTags","_afterNew","super","set","verticalLayout","addTag","plusButton","setAll","icon","Graphics","layout","undefined","minusButton","homeButton","_prepareChildren","isDirty","target","get","previous","_prevSettings","_disposer","MultiDisposer","events","on","zoomIn","zoomOut","goHome","dispose","classNames","concat","className","lengthSum","lambda0","sinPhi0","cosPhi0","lengthStream","sphere","noop","point","lineStart","lengthPointFirst","lineEnd","lengthLineEnd","polygonStart","polygonEnd","lambda","phi","radians","sin","cos","lengthPoint","sinPhi","cosPhi","delta","abs","cosDelta","x","y","z","add","atan2","sqrt","object","Adder","stream","coordinates","type","a","b","length","MapLine","_beforeChanged","_projectionDirty","geometry","series","getPrivate","chart","projection","clipAngle","precision","dataItem","geoPath","_clear","segments","display","s","segment","gp0","p0","convert","longitude","latitude","lineTo","p","gp","pn","_display","context","isEnabled","dispatch","markDirtyProjection","markDirty","_clearDirty","_getTooltipPoint","tooltipX","tooltipY","$type","Percent","geoPoint","positionToGeoPoint","value","position","lineType","distanceAB","pointA","pointB","totalDistance","geoLength","currentDistance","positionA","positionB","geoDistance","location","positionAB","p1","invert","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","asin","haversin","k","interpolate","t","B","A","degrees","distance","geoInterpolate","MapLineSeries","MapSeries","ListTemplate","Template","_new","mapLines","template","fields","_setRawDefault","makeMapLine","mapLine","make","_setDataItem","$array","dataItems","processDataItem","_handlePointsToConnect","_addGeometry","setPrivate","pointsToConnect","markDirtyValues","coords","setRaw","disposeDataItem","removeValue","_excludeDataItem","_unexcludeDataItem","_notIncludeDataItem","_unNotIncludeDataItem","range","start","stop","step","n","arguments","i","Math","max","ceil","Array","graticuleX","dy","epsilon","map","graticuleY","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","makeDataItem","_dataItem","_generate","_updateChildren","geoGraticule","geoBounds","left","bottom","right","top","MapPointSeries","_positionBullets","_makeBullets","bullets","each","bulletFunction","_setBulletParent","_makeBullet","bullet","sprite","parent","bulletsContainer","moveValue","_positionBullet","lineDataItem","fixed","line","lineId","isType","lineDI","getDataItemById","_lineChangedDp","polygonDataItem","polygon","polygonId","polygonDI","positionOnLine","angle","visualCentroid","geoPoint0","geoPoint1","point0","point1","$math","_positionBulletReal","index","_index","xy","visible","zoomToDataItem","zoomLevel","rotate","zoomToGeoPoint","zoomToDataItems","zoomToGeoBounds","di","ClusteredPointSeries","d3hierarchy","_spiral","groups","groupId","_scatterIndex","_scatters","_clusterIndex","_clusters","clusteredDataItems","$object","_key","group","_scatterGroup","_clusterGroup","zoomToCluster","cluster","_clusterDataItem","sumX","sumY","len","clusteredDataItem","DataItem","bulletMethod","averageX","averageY","prevLen","walkChildren","child","Label","text","markDirtyText","_onDataClear","diPoint","hypot","scatter","_scatterDataItem","previousCircles","radius","spiralPoint","intersects","previousCircle","ZoomControl","isPrivateDirty","optional","f","required","Error","constantZero","c","m","packEncloseRandom","circles","random","e","array","shuffle","from","enclosesWeak","encloseBasis","extendBasis","j","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r","encloseBasis1","r1","x2","y2","r2","x21","y21","r21","l","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","C","place","score","node","next","Node","circle","packSiblingsRandom","aa","ca","sj","sk","pack","defaultRadius","padding","root","lcg","eachBefore","radiusLeaf","eachAfter","packChildrenRandom","translateChild","min","size","constant"],"sourceRoot":""}