{"version":3,"file":"static/js/json_flow.356ac7e4.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/render/RadialLabel.ts","../node_modules/src/.internal/core/render/RadialText.ts","../node_modules/src/.internal/core/render/Slice.ts","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-zoom/src/transform.js","../node_modules/src/.internal/charts/flow/ChordNodes.ts","../node_modules/src/.internal/charts/flow/ChordLink.ts","../node_modules/src/.internal/charts/flow/Chord.ts","../node_modules/src/.internal/charts/flow/ChordLinkDirected.ts","../node_modules/src/.internal/charts/flow/ChordDirected.ts","../node_modules/src/.internal/charts/flow/ChordNonRibbon.ts","../node_modules/src/.internal/charts/flow/ArcDiagramNodes.ts","../node_modules/src/.internal/charts/flow/ArcDiagramLink.ts","../node_modules/src/.internal/charts/flow/ArcDiagram.ts","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js"],"sourcesContent":["// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label, ILabelPrivate, ILabelSettings } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\n\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface IRadialLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Pixel value to adjust radius with.\n\t *\n\t * Will add to (or subtract from if negative) whatever value `baseRadius` evaluates\n\t * to.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Radius of the label's position.\n\t *\n\t * Can be either set in absolute pixel value, or percent.\n\t *\n\t * Relative value, depending on the situation, will most often mean its\n\t * position within certain circular object, like a slice: 0% meaning inner\n\t * edge, and 100% - the outer edge.\n\t *\n\t * @default 100%\n\t */\n\tbaseRadius?: number | Percent;\n\n\t/**\n\t * Label anngle in degrees.\n\t *\n\t * In most cases it will be set by the chart/series and does not need to\n\t * be set manually.\n\t */\n\tlabelAngle?: number;\n\n\t/**\n\t * Should the text \"face\" inward or outward from the arc the text is\n\t * following.\n\t *\n\t * `\"auto\"` means that facing will be chosen automatically based on the angle\n\t * to enhance readbility.\n\t *\n\t * Only applies if `type = \"circluar\"`.\n\t * \n\t * @default \"auto\"\n\t */\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\n\t/**\n\t * Should label be drawn inside (`true`) or outside (`false`) the arc.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n\t/**\n\t * Label type.\n\t *\n\t * * `\"regular\"` (default) - normal horizontal label.\n\t * * `\"circular\"` - arched label.\n\t * * `\"radial\"` - label radiating from the center of the arc.\n\t * * `\"aligned\"` - horizontal label aligned with other labels horizontally.\n\t * * `\"adjusted\"` - horizontal label adjusted in postion.\n\t *\n\t * **IMPORTANT!** If the label is used in a [[PieSeries]], its `alignLabels` setting\n\t * (default: `true`) takes precedence over `textType`. If you need to set this\n\t * to anything else than `regular`, make sure you also set `alignLabels: falese` on\n\t * `PieSeries`.\n\t *\n\t * @default \"regular\"\n\t */\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\n\t/**\n\t * Extra spacing between characters, in pixels.\n\t *\n\t * @default 0\n\t */\n\tkerning?: number;\n\n}\n\nexport interface IRadialLabelPrivate extends ILabelPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tleft?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tradius?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius?: number;\n\n}\n\nexport class RadialLabel extends Label {\n\n\tdeclare public _settings: IRadialLabelSettings;\n\tdeclare public _privateSettings: IRadialLabelPrivate;\n\n\tdeclare protected _text: RadialText;\n\n\tpublic static className: string = \"RadialLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([RadialLabel.className]);\n\n\tprotected _flipped: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis._textKeys.push(\"textType\", \"kerning\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(RadialText.new(this._root, {}));\n\t}\n\n\t/**\n\t * Returns base radius in pixels.\n\t * \n\t * @return Base radius\n\t */\n\tpublic baseRadius(): number {\n\t\tconst radiusPrivate = this.getPrivate(\"radius\", 0);\n\t\tconst innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n\t\tconst baseRadius = this.get(\"baseRadius\", 0);\n\t\treturn innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n\t}\n\n\t/**\n\t * Returns radius adjustment in pixels.\n\t * \n\t * @return Radius\n\t */\n\tpublic radius(): number {\n\t\tconst inside = this.get(\"inside\", false);\n\t\treturn this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n\n\t\t\tconst textType = this.get(\"textType\", \"adjusted\");\n\n\t\t\tconst inside = this.get(\"inside\", false);\n\n\t\t\tconst orientation = this.get(\"orientation\");\n\t\t\tlet labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n\n\t\t\tthis._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n\t\t\tthis._text.set(\"inside\", inside);\n\n\t\t\tconst sin = $math.sin(labelAngle);\n\t\t\tconst cos = $math.cos(labelAngle);\n\n\t\t\tlet baseRadius = this.baseRadius();\n\t\t\tlet radius = this.radius();\n\n\t\t\tthis._display.angle = 0;\n\n\t\t\tif (textType == \"circular\") {\n\n\t\t\t\tthis.setAll({\n\t\t\t\t\tpaddingTop: 0,\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingRight: 0\n\t\t\t\t});\n\n\t\t\t\t// Circular labels are handled and positioned differently\n\n\t\t\t\tthis._text.set(\"orientation\", orientation);\n\t\t\t\tthis._text.set(\"radius\", radius);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (baseRadius == 0) {\n\t\t\t\t\tlabelAngle = 0;\n\t\t\t\t\tradius = 0;\n\t\t\t\t}\n\n\t\t\t\t// Positioning of radial/regular labels are teh same\n\t\t\t\tlet x = radius * cos;\n\t\t\t\tlet y = radius * sin;\n\n\t\t\t\tif (textType == \"radial\") {\n\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\n\t\t\t\t\tif ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\n\t\t\t\t\t\tthis._display.angle = labelAngle;// + 90;\n\t\t\t\t\t\tthis._flipped = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._display.angle = labelAngle + 180;\n\t\t\t\t\t\tthis._flipped = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._dirty.rotation = false;\n\t\t\t\t}\n\t\t\t\telse if (textType == \"adjusted\") {\n\t\t\t\t\tthis.setRaw(\"centerX\", p50);\n\t\t\t\t\tthis.setRaw(\"centerY\", p50);\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t\telse if (textType == \"regular\") {\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n\n\tpublic _updatePosition() {\n\n\t\tconst textType = this.get(\"textType\", \"regular\");\n\t\tconst inside = this.get(\"inside\", false);\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\t\tlet labelAngle = this.get(\"labelAngle\", 0);\n\t\tlet bounds = this.localBounds();\n\t\tlet w = bounds.right - bounds.left;\n\t\tlet h = bounds.bottom - bounds.top;\n\n\t\tif (textType == \"radial\") {\n\t\t\tif (this._flipped) {\n\t\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\t\tif (centerX instanceof Percent) {\n\t\t\t\t\tw = w * (1 - centerX.value * 2);\n\t\t\t\t}\n\n\t\t\t\tdx = w * $math.cos(labelAngle);\n\t\t\t\tdy = w * $math.sin(labelAngle);\n\t\t\t}\n\t\t}\n\t\telse if (!inside && textType == \"adjusted\") {\n\t\t\tdx = w / 2 * $math.cos(labelAngle);\n\t\t\tdy = h / 2 * $math.sin(labelAngle);\n\t\t}\n\n\n\t\tthis.setRaw(\"dx\", dx);\n\t\tthis.setRaw(\"dy\", dy);\n\n\t\tsuper._updatePosition();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get text(): RadialText {\n\t\treturn this._text;\n\t}\n\n}\n","import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { IPoint } from \"../util/IPoint\";\nimport { arc } from \"d3-shape\";\nimport * as $math from \"../util/Math\";\n\nexport interface ISliceSettings extends IGraphicsSettings {\n\n\t/**\n\t * Radius in pixels.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Slice \"width\" in degrees.\n\t */\n\tarc?: number;\n\n\t/**\n\t * Inner radius of the slice in pixels.\n\t */\n\tinnerRadius?: number;\n\n\t/**\n\t * Start angle in degrees.\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Slice corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n\n\t/**\n\t * Slice \"pull out\" radius in pixels.\n\t */\n\tshiftRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `radius` value is. Negative\n\t * numbers can also be used.\n\t */\n\tdRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `innerRadius` value is.\n\t * Negative numbers can also be used.\n\t */\n\tdInnerRadius?: number;\n\n}\n\nexport interface ISlicePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a slice shape.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Slice extends Graphics {\n\n\tdeclare public _settings: ISliceSettings;\n\tdeclare public _privateSettings: ISlicePrivate;\n\n\tpublic static className: string = \"Slice\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Slice.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic ix: number = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic iy: number = 0;\n\n\tprotected _generator = arc();\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tlet radius = this.get(\"radius\", 0);\n\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\tradius += dRadius;\n\t\tinnerRadius += dInnerRadius;\n\n\t\tif (innerRadius < 0) {\n\t\t\tinnerRadius = radius + innerRadius;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tx = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value)\n\t\t}\n\n\t\tif (tooltipY instanceof Percent) {\n\t\t\ty = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value)\n\t\t}\n\n\t\tif (this.get(\"arc\") >= 360 && innerRadius == 0) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\n\n\t\treturn { x, y };\n\t}\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tlet startAngle = this.get(\"startAngle\", 0);\n\t\t\tlet arc = this.get(\"arc\", 0);\n\t\t\tconst generator = this._generator;\n\n\t\t\tif(arc < 0){\n\t\t\t\tstartAngle = startAngle + arc;\n\t\t\t\tarc = arc * -1;\n\t\t\t}\n\n\t\t\tif(arc > 0.1){ // this fixes bug with full circle when arc is very small\n\t\t\t\tgenerator.cornerRadius(this.get(\"cornerRadius\", 0));\n\t\t\t}\n\t\t\tgenerator.context(this._display as any);\n\n\t\t\tlet radius = this.get(\"radius\", 0);\n\t\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\t\tradius += dRadius;\n\t\t\tinnerRadius += dInnerRadius;\t\t\t\n\n\t\t\tif (innerRadius < 0) {\n\t\t\t\tinnerRadius = radius + innerRadius;\n\t\t\t}\n\n\t\t\tgenerator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\n\n\t\t\tlet middleAngle = startAngle + arc / 2;\n\n\t\t\tthis.ix = $math.cos(middleAngle);\n\t\t\tthis.iy = $math.sin(middleAngle);\n\n\t\t\tconst shiftRadius = this.get(\"shiftRadius\", 0);\n\t\t\tthis.setRaw(\"dx\", this.ix * shiftRadius);\n\t\t\tthis.setRaw(\"dy\", this.iy * shiftRadius);\t\t\t\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n}\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Chord } from \"./Chord\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordNodesDataItem extends IFlowNodesDataItem {\n\n\t/**\n\t * Node [[Slice]] element.\n\t */\n\tslice: Slice;\n\n\t/**\n\t * Node label element.\n\t */\n\tlabel: RadialLabel;\n\n}\n\nexport interface IChordNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface IChordNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface IChordNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Chord]] series.\n */\nexport class ChordNodes extends FlowNodes {\n\tpublic static className: string = \"ChordNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ChordNodes.className]);\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {}, [this.labels.template])\n\t);\n\n\tdeclare public _settings: IChordNodesSettings;\n\tdeclare public _privateSettings: IChordNodesPrivate;\n\tdeclare public _dataItemSettings: IChordNodesDataItem;\n\tdeclare public _events: IChordNodesEvents;\n\n\t/**\n\t * Related [[Chord]] series.\n\t */\n\tpublic flow: Chord | undefined;\n\n\tprotected _dAngle: number = 0;\n\n\t/**\n\t * List of slice elements.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.slices.template])\n\t);\n\n\t/**\n\t * @ignore\n\t * added to solve old naming bug\n\t */\n\tpublic readonly rectangles = this.slices;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst node = super.makeNode(dataItem, \"chord\");\n\n\t\tconst slice = node.children.insertIndex(0, this.slices.make());\n\t\tdataItem.set(\"slice\", slice);\n\t\tslice._setSoft(\"fill\", dataItem.get(\"fill\"));\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\t\tlabel.addTag(\"flow\");\n\t\tlabel.addTag(\"chord\");\n\t\tlabel.addTag(\"node\");\n\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tnode.events.on(\"dragstart\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\t\t\tif (this.flow) {\n\t\t\t\tthis._dAngle = this.flow.get(\"startAngle\", 0) - angle;\n\t\t\t}\n\t\t})\n\n\t\tnode.events.on(\"dragged\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\n\t\t\tnode.setAll({ x: 0, y: 0 });\n\t\t\tif (this.flow) {\n\t\t\t\tthis.flow.set(\"startAngle\", angle + this._dAngle);\n\t\t\t}\n\t\t})\n\n\t\tlabel._setDataItem(dataItem);\n\t\tslice._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\t\t\tconst bulletRadius = innerRadius + (radius - innerRadius) * locationY;\n\t\t\t\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\t\t\t\tsprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif(slice){\n\t\t\tslice.set(\"fill\", dataItem.get(\"fill\"));\n\t\t}\n\t}\t\t\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tthis.slices.removeValue(slice);\n\t\t\tslice.dispose();\n\t\t}\n\t}\n}\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IChordNodesDataItem } from \"./ChordNodes\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { Chord, IChordDataItem } from \"./Chord\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source data item.\n\t */\n\tsource?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * target data item.\n\t */\n\ttarget?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Radius of the link at the source.\n\t */\n\tsourceRadius?: number | Percent;\n\n\t/**\n\t * Radius of the link at the end (target).\n\t */\n\ttargetRadius?: number | Percent;\n\n}\n\nexport interface IChordLinkPrivate extends IFlowLinkPrivate {\n}\n\n/**\n * A link element used in [[Chord]] chart.\n */\nexport class ChordLink extends FlowLink {\n\n\tpublic _p0: IPoint | undefined;\n\tpublic _p1: IPoint | undefined;\n\n\tpublic _type: \"line\" | \"curve\" | undefined;\n\n\tdeclare public _settings: IChordLinkSettings;\n\tdeclare public _privateSettings: IChordLinkPrivate;\n\n\tpublic static className: string = \"ChordLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ChordLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDataItem> | undefined;\n\n\tdeclare public series: Chord | undefined;\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._p0 && this._p1) {\n\t\t\tif (this._type === \"line\") {\n\t\t\t\tlet p = $math.getPointOnLine(this._p0, this._p1, location);\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\n\t\t\t\tlet p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\n\t\t\t\tlet p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\n\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { chord, ribbon, RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\nimport { ascending, descending } from \"d3\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { ChordNodes, IChordNodesDataItem } from \"./ChordNodes\";\nimport { ChordLink } from \"./ChordLink\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IChordDataItem extends IFlowDataItem {\n\n\t/**\n\t * A link element.\n\t */\n\tlink: ChordLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<IChordNodesDataItem>;\n\n}\n\nexport interface IChordSettings extends IFlowSettings {\n\n\t/**\n\t * Angle of a gap between each node, in degrees.\n\t *\n\t * @default 1\n\t */\n\tpadAngle?: number;\n\n\t/**\n\t * Radius of the diagram in percent or pixels.\n\t *\n\t * If set in percent, it will be relative to the whole area available for\n\t * the series.\n\t *\n\t * @default 90%\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Starting angle in degrees.\n\t *\n\t * @default 0\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"descending\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n}\n\nexport interface IChordPrivate extends IFlowPrivate {\n}\n\nexport interface IChordEvents extends IFlowEvents {\n}\n\n/**\n * Regular chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Chord extends Flow {\n\n\tpublic static className: string = \"Chord\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Chord.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLink>\n\t */\n\tpublic readonly links: ListTemplate<ChordLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\n\t/**\n\t * A series for all chord nodes.\n\t *\n\t * @default ChordNodes.new()\n\t */\n\tpublic readonly nodes: ChordNodes = this.children.push(ChordNodes.new(this._root, {}));\n\n\tdeclare public _settings: IChordSettings;\n\tdeclare public _privateSettings: IChordPrivate;\n\tdeclare public _dataItemSettings: IChordDataItem;\n\tdeclare public _events: IChordEvents;\n\n\tpublic _d3chord = chord();\n\tpublic _chordLayout: { source: { index: number, startAngle: number, endAngle: number, value: number }, target: { index: number, startAngle: number, endAngle: number, value: number } }[] = [];\n\tpublic _ribbon = ribbon();\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\n\t\tthis.linksContainer.setAll({ x: p50, y: p50 })\n\t\tthis.bulletsContainer.setAll({ x: p50, y: p50 });\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _fixRibbon(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>) {\n\t\tribbon.startAngle((d) => {\n\t\t\treturn d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\n\t\tribbon.endAngle((d) => {\n\t\t\treturn d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLink {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tthis.links.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\t\tlink.series = this;\n\t\treturn link;\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\t\t\tlet outgoing = sourceDataItem.get(\"outgoingLinks\");\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 0;\n\t\t\t\tif (outgoing) {\n\t\t\t\t\t$array.each(outgoing, (outgoingLink) => {\n\t\t\t\t\t\tif (outgoingLink.get(\"target\") === targetDataItem) {\n\t\t\t\t\t\t\tvalue = outgoingLink.get(\"valueWorking\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet valueSum = this.getPrivate(\"valueSum\", 0);\n\t\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\t\tif(value > 0 && minSize > 0){\n\t\t\t\t\t\t\tif(value < valueSum * minSize){\n\t\t\t\t\t\t\t\tvalue = valueSum * minSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._fixRibbon(this._ribbon);\n\n\t\tlet chordChanged = false;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\n\n\t\t\tconst matrix = this._makeMatrix();\n\n\t\t\tthis._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\n\t\t\tconst sort = this.get(\"sort\");\n\n\t\t\tif (sort === \"ascending\") {\n\t\t\t\tthis._d3chord.sortGroups(ascending);\n\t\t\t}\n\t\t\telse if (sort === \"descending\") {\n\t\t\t\tthis._d3chord.sortGroups(descending);\n\t\t\t}\n/*\n\t\t\tthis._d3chord.sortSubgroups((a, b)=>{\n\t\t\t\tif (a != Math.round(a)) return false\n\t\t\t\tif (b != Math.round(b)) return true\n\t\t\t\treturn b < a ? -1 : b > a ? 1 : 0;\n\t\t\t})\n*/\n\t\t\tthis._chordLayout = this._d3chord(matrix);\n\n\t\t\tchordChanged = true;\n\t\t}\n\n\t\tif (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\n\t\t\tlet radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\n\n\t\t\tlet i = 0;\n\n\t\t\tconst chordStartAngle = this.get(\"startAngle\", 0);\n\t\t\tconst nodeWidth = this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\n\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\tconst chordGroup = (this._chordLayout as any).groups[i];\n\t\t\t\tconst startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tconst endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tslice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle as number, arc: endAngle - startAngle })\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tlabel.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\n\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\tlabel.setPrivate(\"innerRadius\", 0.1);\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tconst linkRadius = radius - this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this._chordLayout, (chord) => {\n\n\t\t\t\tlet dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\n\n\t\t\t\tif (!dataItem) {\n\t\t\t\t\tdataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\n\t\t\t\t}\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tthis._getLinkPoints(link, linkRadius, chord);\n\t\t\t\t\tthis._updateLink(this._ribbon, link, linkRadius, chord);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tconst source = chordLayoutItem.source;\n\t\tconst target = chordLayoutItem.target;\n\n\t\tconst chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\n\n\t\tif (source && target) {\n\t\t\tconst startAngle0 = source.startAngle;\n\t\t\tconst endAngle0 = source.endAngle\n\t\t\tconst angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\n\n\t\t\tconst startAngle1 = target.startAngle;\n\t\t\tconst endAngle1 = target.endAngle\n\t\t\tconst angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\n\n\t\t\tlink._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\n\t\t}\n\t}\n\n\tprotected _updateLink(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tif (chordLayoutItem) {\n\t\t\tribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\n\t\t\tribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tribbon.context(display as any);\n\t\t\t\tribbon(chordLayoutItem);\n\t\t\t})\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { ChordDirected, IChordDirectedDataItem } from \"./ChordDirected\";\n\nimport { ChordLink, IChordLinkPrivate, IChordLinkSettings } from \"./ChordLink\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IChordLinkDirectedSettings extends IChordLinkSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * @default 10\n\t */\n\theadRadius?: number;\n\n}\n\nexport interface IChordLinkDirectedPrivate extends IChordLinkPrivate {\n}\n\n/**\n * A link element used in [[ChordDirected]] chart.\n */\nexport class ChordLinkDirected extends ChordLink {\n\tdeclare public _settings: IChordLinkDirectedSettings;\n\tdeclare public _privateSettings: IChordLinkDirectedPrivate;\n\n\tpublic static className: string = \"ChordLinkDirected\";\n\tpublic static classNames: Array<string> = ChordLink.classNames.concat([ChordLinkDirected.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDirectedDataItem> | undefined;\n\n\tdeclare public series: ChordDirected | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\n\n\t\tsuper._afterNew();\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t);\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n","import type { ChordLink } from \"./ChordLink\";\nimport type { RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordNonRibbonDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordNonRibbonSettings extends IChordSettings {\n\n\t/**\n\t * Type of the link:\n\t *\n\t * `\"curve\"` (default) will display link as a curved line.\n\t * `\"line\"` will display link as a straight line.\n\t *\n\t * @default \"curve\"\n\t */\n\tlinkType?: \"curve\" | \"line\"\n\n}\n\nexport interface IChordNonRibbonPrivate extends IChordPrivate {\n}\n\nexport interface IChordNonRibbonEvents extends IChordEvents {\n}\n\n/**\n * Chord series with think line links.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordNonRibbon extends Chord {\n\n\tpublic static className: string = \"ChordNonRibbon\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordNonRibbon.className]);\n\n\tdeclare public _settings: IChordNonRibbonSettings;\n\tdeclare public _privateSettings: IChordNonRibbonPrivate;\n\tdeclare public _dataItemSettings: IChordNonRibbonDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"basic\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 1;\n\n\t\t\t\tif (sourceDataItem === targetDataItem) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tprotected _updateLink(_ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, _linkRadius: number, chordLayoutItem: any) {\n\t\tlink._type = this.get(\"linkType\");\n\t\tif (chordLayoutItem) {\n\t\t\tconst linkType = this.get(\"linkType\");\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tlet p0 = link._p0;\n\t\t\t\tlet p1 = link._p1;\n\t\t\t\tif (p0 && p1) {\n\t\t\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\t\t\tif (linkType == \"line\") {\n\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdisplay.quadraticCurveTo(0, 0, p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, _chordLayoutItem: any) {\n\t\tconst source = link.get(\"source\");\n\t\tconst target = link.get(\"target\");\n\n\t\tif (source && target) {\n\n\t\t\tconst sourceSlice = source.get(\"slice\");\n\t\t\tconst targetSlice = target.get(\"slice\");\n\n\t\t\tconst startAngle0 = sourceSlice.get(\"startAngle\", 0);\n\t\t\tconst arc0 = sourceSlice.get(\"arc\", 0)\n\t\t\tconst angle0 = startAngle0 + arc0 / 2;\n\n\t\t\tconst startAngle1 = targetSlice.get(\"startAngle\", 0);\n\t\t\tconst arc1 = targetSlice.get(\"arc\", 0)\n\t\t\tconst angle1 = startAngle1 + arc1 / 2;\n\n\t\t\tlink._p0 = { x: linkRadius * $math.cos(angle0), y: linkRadius * $math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * $math.cos(angle1), y: linkRadius * $math.sin(angle1) };\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { FlowNode } from \"./FlowNode\";\r\nimport type { ArcDiagram } from \"./ArcDiagram\";\r\n\r\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\r\nimport { Circle } from \"../../core/render/Circle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Label } from \"../../core/render/Label\";\r\n\r\nexport interface IArcDiagramNodesDataItem extends IFlowNodesDataItem {\r\n\r\n\t/**\r\n\t * Node [[Circle]] element.\r\n\t */\r\n\tcircle: Circle;\r\n\r\n\t/**\r\n\t * Node label element.\r\n\t */\r\n\tlabel: Label;\r\n}\r\n\r\nexport interface IArcDiagramNodesSettings extends IFlowNodesSettings { };\r\n\r\nexport interface IArcDiagramNodesPrivate extends IFlowNodesPrivate { };\r\n\r\nexport interface IArcDiagramNodesEvents extends IFlowNodesEvents { };\r\n\r\n/**\r\n * Holds instances of nodes for a [[ArcDiagram]] series.\r\n */\r\nexport class ArcDiagramNodes extends FlowNodes {\r\n\tpublic static className: string = \"ArcDiagramNodes\";\r\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ArcDiagramNodes.className]);\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t);\r\n\r\n\tdeclare public _settings: IArcDiagramNodesSettings;\r\n\tdeclare public _privateSettings: IArcDiagramNodesPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramNodesDataItem;\r\n\tdeclare public _events: IArcDiagramNodesEvents;\r\n\r\n\t/**\r\n\t * Related [[ArcDiagram]] series.\r\n\t */\r\n\tpublic flow: ArcDiagram | undefined;\r\n\r\n\tprotected _dAngle: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t *\r\n\t * @default new ListTemplate<Slice>\r\n\t */\r\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Circle._new(this._root, { themeTags: [\"shape\"] }, [this.circles.template])\r\n\t);\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\r\n\t\tconst node = super.makeNode(dataItem, \"ArcDiagram\");\r\n\r\n\t\tconst circle = node.children.insertIndex(0, this.circles.make());\r\n\t\tdataItem.set(\"circle\", circle);\r\n\t\tcircle._setSoft(\"fill\", dataItem.get(\"fill\"));\r\n\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.labels.push(label);\r\n\t\tlabel.addTag(\"flow\");\r\n\t\tlabel.addTag(\"arcdiagram\");\r\n\t\tlabel.addTag(\"node\");\r\n\r\n\t\tnode.children.push(label);\r\n\t\tdataItem.set(\"label\", label);\r\n\r\n\t\tlabel._setDataItem(dataItem);\r\n\t\tcircle._setDataItem(dataItem);\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tlet circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tthis.circles.removeValue(circle);\r\n\t\t\tcircle.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tconst circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tcircle.set(\"fill\", dataItem.get(\"fill\"));\r\n\t\t}\r\n\t}\r\n}\r\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport type { ArcDiagram, IArcDiagramDataItem } from \"./ArcDiagram\";\r\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IArcDiagramLinkSettings extends IFlowLinkSettings {\r\n\r\n\t/**\r\n\t * Source data item.\r\n\t */\r\n\tsource?: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * target data item.\r\n\t */\r\n\ttarget?: DataItem<IArcDiagramNodesDataItem>;\r\n}\r\n\r\nexport interface IArcDiagramLinkPrivate extends IFlowLinkPrivate {\r\n\t/**\r\n\t * Link orientation.\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n}\r\n\r\n/**\r\n * A link element used in [[ArcDiagram]] chart.\r\n */\r\nexport class ArcDiagramLink extends FlowLink {\r\n\r\n\tpublic _p0: IPoint | undefined;\r\n\tpublic _p1: IPoint | undefined;\r\n\tpublic _radius: number = 0;\r\n\r\n\tdeclare public _settings: IArcDiagramLinkSettings;\r\n\tdeclare public _privateSettings: IArcDiagramLinkPrivate;\r\n\r\n\tpublic static className: string = \"ArcDiagramLink\";\r\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ArcDiagramLink.className]);\r\n\r\n\tdeclare protected _dataItem: DataItem<IArcDiagramDataItem> | undefined;\r\n\r\n\tdeclare public series: ArcDiagram | undefined;\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"source\")) {\r\n\t\t\tconst source = this.get(\"source\");\r\n\t\t\tif (source) {\r\n\t\t\t\tconst sourceNode = source.get(\"node\");\r\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\t\t\tif (target) {\r\n\t\t\t\tconst targetNode = target.get(\"node\");\r\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isPrivateDirty(\"orientation\")) {\r\n\t\t\tconst series = this.series;\r\n\t\t\tconst dataItem = this.dataItem as DataItem<IArcDiagramDataItem>;\r\n\t\t\tif (dataItem && series) {\r\n\t\t\t\tseries._updateLinkColor(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.series && this.dataItem) {\r\n\t\t\tthis.series._positionBullets(this.dataItem as any);\r\n\t\t}\r\n\r\n\t\tif (this.get(\"strokeStyle\") == \"gradient\") {\r\n\t\t\tthis.set(\"isMeasured\", true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.set(\"isMeasured\", false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _draw() {\r\n\t\tconst target = this.get(\"target\");\r\n\t\tconst source = this.get(\"source\");\r\n\r\n\t\tif (source && target) {\r\n\t\t\tlet sourceNode = source.get(\"node\");\r\n\t\t\tlet targetNode = target.get(\"node\");\r\n\r\n\t\t\tconst x0 = sourceNode.x();\r\n\t\t\tconst y0 = sourceNode.y();\r\n\r\n\t\t\tconst x1 = targetNode.x();\r\n\t\t\tconst y1 = targetNode.y();\r\n\r\n\t\t\tthis._p0 = { x: x0, y: y0 };\r\n\t\t\tthis._p1 = { x: x1, y: y1 };\r\n\r\n\t\t\tlet radius = 0;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tradius = (y1 - y0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (y0 > y1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._display.arc(x0, y0 + radius, radius * d, -Math.PI / 2, Math.PI / 2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradius = (x1 - x0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (x0 > x1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis._display.arc(x0 + radius, y0, radius * d, -Math.PI, 0);\r\n\t\t\t}\r\n\t\t\tthis._radius = radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getPoint(location: number): IOrientationPoint {\r\n\t\tif (this._p0 && this._p1) {\r\n\t\t\tconst radius = this._radius;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tlet angle = -90 + 180 * location;\r\n\t\t\t\treturn { y: this._p0.y + radius + radius * $math.sin(angle), x: radius * $math.cos(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet angle = 180 + 180 * location;\r\n\t\t\t\treturn { x: this._p0.x + radius + radius * $math.cos(angle), y: radius * $math.sin(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\r\n\r\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { ArcDiagramNodes, IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport { ArcDiagramLink } from \"./ArcDiagramLink\";\r\nimport type { Easing } from \"../../core/util/Ease\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n\r\n\r\nexport interface IArcDiagramDataItem extends IFlowDataItem {\r\n\r\n\t/**\r\n\t * A link element.\r\n\t */\r\n\tlink: ArcDiagramLink;\r\n\r\n\t/**\r\n\t * Source node data item.\r\n\t */\r\n\tsource: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * Target node data item.\r\n\t */\r\n\ttarget: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n}\r\n\r\nexport interface IArcDiagramSettings extends IFlowSettings {\r\n\t/**\r\n\t * Orientation of the series. This setting can not be changed after the chart is initialized.\r\n\t *\r\n\t * @default \"horizontal\"\r\n\t */\r\n\torientation: \"horizontal\" | \"vertical\";\r\n\r\n\t/**\r\n\t * Minimum radius of a nodes circle.\r\n\t * Maximum radius is computed based on available space\r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number;\r\n\r\n\t/**\r\n\t * Defines Which value should be used when calculating circle radius. Use \"none\" if you want all circles to be the same.\r\n\t * @martynas: gal cia reik naudot radiusField, biski no idea.\r\n\t * @default \"sum\"\r\n\t */\r\n\tradiusKey?: \"sum\" | \"sumIncoming\" | \"sumOutgoing\" | \"none\";\r\n\r\n\t/**\r\n\t * Duration for all drill animations in milliseconds.\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use for drill animations.\r\n\t */\r\n\tanimationEasing?: Easing;\r\n}\r\n\r\nexport interface IArcDiagramPrivate extends IFlowPrivate {\r\n}\r\n\r\nexport interface IArcDiagramEvents extends IFlowEvents {\r\n}\r\n\r\n/**\r\n * Regular ArcDiagram series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\r\nexport class ArcDiagram extends Flow {\r\n\r\n\tpublic static className: string = \"ArcDiagram\";\r\n\tpublic static classNames: Array<string> = Flow.classNames.concat([ArcDiagram.className]);\r\n\r\n\t/**\r\n\t * List of link elements.\r\n\t *\r\n\t * @default new ListTemplate<ArcDiagramLink>\r\n\t */\r\n\tpublic readonly links: ListTemplate<ArcDiagramLink> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => ArcDiagramLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\r\n\t);\r\n\r\n\t/**\r\n\t * A series for all ArcDiagram nodes.\r\n\t *\r\n\t * @default ArcDiagramNodes.new()\r\n\t */\r\n\tpublic readonly nodes: ArcDiagramNodes = this.children.push(ArcDiagramNodes.new(this._root, {}));\r\n\r\n\tdeclare public _settings: IArcDiagramSettings;\r\n\tdeclare public _privateSettings: IArcDiagramPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramDataItem;\r\n\tdeclare public _events: IArcDiagramEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"arcdiagram\", this._settings.orientation || \"horizontal\"]);\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.nodes.children.push(this.bulletsContainer);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ArcDiagramLink {\r\n\t\tconst link = this.nodes.children.moveValue(this.links.make(), 0);\r\n\t\tthis.links.push(link);\r\n\t\tlink._setDataItem(dataItem);\r\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\r\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\r\n\t\tlink.series = this;\r\n\t\treturn link;\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"orientation\")) {\r\n\t\t\tlet width = 1;\r\n\t\t\tconst orientation = this.get(\"orientation\");\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tconst link = dataItem.get(\"link\");\r\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\r\n\t\t\t})\r\n\r\n\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\twidth = this.innerHeight();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twidth = this.innerWidth();\r\n\t\t\t}\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tlet low = Infinity;\r\n\t\t\tlet radiusKey = this.get(\"radiusKey\");\r\n\r\n\t\t\tif (radiusKey != \"none\") {\r\n\t\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\t\t\t\t\tsum += value;\r\n\t\t\t\t\tlow = Math.min(low, value);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tconst count = this.nodes.dataItems.length;\r\n\t\t\tconst nodePadding = this.get(\"nodePadding\", 10);\r\n\t\t\tconst minRadius = this.get(\"minRadius\", 5);\r\n\r\n\t\t\twidth = width - count * (nodePadding + minRadius * 2);\r\n\r\n\t\t\tif (width <= 0) {\r\n\t\t\t\twidth = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlet sumNoLow = sum - count * low;\r\n\t\t\tlet c = width / sumNoLow;\r\n\r\n\t\t\tlet prevCoord = 0;\r\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\r\n\t\t\tconst animationEasing = this.get(\"animationEasing\");\r\n\r\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\r\n\t\t\t\tconst node = dataItem.get(\"node\");\r\n\t\t\t\tlet radius = minRadius + c * (value - low) / 2;\r\n\r\n\t\t\t\tif (radiusKey == \"none\") {\r\n\t\t\t\t\tradius = minRadius + width / count / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\t\tnode.set(\"x\", 0);\r\n\r\n\t\t\t\t\tconst y = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.y() == 0) {\r\n\t\t\t\t\t\tnode.set(\"y\", y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.set(\"y\", 0);\r\n\t\t\t\t\tconst x = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.x() == 0) {\r\n\t\t\t\t\t\tnode.set(\"x\", x);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevCoord = prevCoord + nodePadding + radius * 2;\r\n\t\t\t\tdataItem.get(\"circle\").set(\"radius\", radius);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper._updateLinkColor(dataItem);\r\n\t\tconst orientation = this.get(\"orientation\");\r\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\r\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\r\n\r\n\t\tif (orientation == \"vertical\") {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"],"names":["RadialLabel","Label","constructor","Object","defineProperty","_afterNew","this","_textKeys","push","super","_makeText","_text","children","RadialText","new","_root","baseRadius","radiusPrivate","getPrivate","innerRadiusPrivate","get","$utils","radius","inside","_updateChildren","isDirty","isPrivateDirty","textType","orientation","labelAngle","$math","set","sin","cos","_display","angle","setAll","paddingTop","paddingBottom","paddingLeft","paddingRight","x","y","setRaw","_flipped","_dirty","rotation","p50","markDirtyPosition","markDirtyBounds","_updatePosition","dx","dy","bounds","localBounds","w","right","left","h","bottom","top","centerX","Percent","value","text","classNames","concat","className","Text","_renderer","makeRadialText","textStyle","_beforeChanged","clear","startAngle","kerning","Slice","Graphics","arc","_getTooltipPoint","tooltipX","tooltipY","$type","innerRadius","ix","iy","_clear","_changed","generator","_generator","cornerRadius","context","outerRadius","endAngle","middleAngle","shiftRadius","abs","Math","pi","PI","halfPi","tau","max","epsilon","range","i","j","Array","from","length","_","k","chord","directed","transpose","padAngle","sortGroups","sortSubgroups","sortChords","matrix","n","groupSums","groupIndex","chords","groups","Float64Array","sort","a","b","x0","subgroupIndex","filter","source","target","index","values","arguments","compare","slice","prototype","defaultSource","d","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","headRadius","sourceRadius","targetRadius","buffer","s","apply","t","ap","argv","call","sr","sa0","sa1","tr","ta0","ta1","path","moveTo","tr2","ta2","quadraticCurveTo","lineTo","closePath","constant","ribbonArrow","ascending","NaN","descending","min","number1","e","number2","map","type","Transform","scale","translate","point","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY","toString","ChordNodes","FlowNodes","ListTemplate","Template","_new","labels","template","themeTags","slices","makeNode","dataItem","node","insertIndex","make","_setSoft","label","addTag","events","on","toLocal","flow","_dAngle","_setDataItem","_positionBullet","bullet","sprite","locationX","locationY","bulletRadius","_updateNodeColor","disposeDataItem","removeValue","dispose","ChordLink","FlowLink","getPoint","_p0","_p1","_type","p","p0","p1","Chord","Flow","links","_settings","linksContainer","bulletsContainer","_fixRibbon","makeLink","link","series","_makeMatrix","$array","nodes","dataItems","sourceDataItem","group","outgoing","targetDataItem","outgoingLink","valueSum","minSize","_prepareChildren","_ribbon","chordChanged","_valuesDirty","_sizeDirty","_d3chord","_chordLayout","innerWidth","innerHeight","chordStartAngle","nodeWidth","chordGroup","setPrivate","linkRadius","_linksByIndex","_getLinkPoints","_updateLink","chordLayoutItem","startAngle0","angle0","startAngle1","angle1","p100","display","ChordLinkDirected","ChordDirected","_markDirtyKey","linkHeadRadius","ChordNonRibbon","_linkRadius","linkType","_chordLayoutItem","sourceSlice","targetSlice","ArcDiagramNodes","Circle","circles","circle","ArcDiagramLink","sourceNode","_disposers","targetNode","_updateLinkColor","_positionBullets","_draw","y0","x1","y1","_radius","ArcDiagram","moveValue","width","sum","low","Infinity","radiusKey","count","nodePadding","minRadius","c","prevCoord","animationDuration","animationEasing","animate","key","to","duration","easing","fillGradient","_fillGradient","strokeGradient","_strokeGradient","atan2","sqrt","asin","arcInnerRadius","arcOuterRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x10","y10","x00","y00","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","padRadius","withPath","r0","a0","a1","da","t0","t1","a01","a11","a00","a10","da0","da1","rp","rc0","rc1","oc","x2","y2","x3","y3","x32","y32","intersect","ax","ay","bx","by","kc","acos","lc","centroid"],"sourceRoot":""}