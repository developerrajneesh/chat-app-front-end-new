{"version":3,"file":"static/js/json_xy.1077d1ba.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/charts/xy/axes/AxisLabelRadial.ts","../node_modules/src/.internal/core/render/RadialLabel.ts","../node_modules/src/.internal/core/render/RadialText.ts","../node_modules/src/.internal/charts/xy/axes/CategoryAxis.ts","../node_modules/src/.internal/charts/xy/axes/CategoryDateAxis.ts","../node_modules/src/.internal/charts/xy/axes/DurationAxis.ts","../node_modules/src/.internal/charts/xy/series/OHLC.ts","../node_modules/src/.internal/charts/xy/series/OHLCSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedYLineSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedXLineSeries.ts","../node_modules/src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","../node_modules/d3-shape/src/curve/step.js","../node_modules/src/.internal/charts/xy/series/StepLineSeries.ts","../node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label, ILabelPrivate, ILabelSettings } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\n\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface IRadialLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Pixel value to adjust radius with.\n\t *\n\t * Will add to (or subtract from if negative) whatever value `baseRadius` evaluates\n\t * to.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Radius of the label's position.\n\t *\n\t * Can be either set in absolute pixel value, or percent.\n\t *\n\t * Relative value, depending on the situation, will most often mean its\n\t * position within certain circular object, like a slice: 0% meaning inner\n\t * edge, and 100% - the outer edge.\n\t *\n\t * @default 100%\n\t */\n\tbaseRadius?: number | Percent;\n\n\t/**\n\t * Label anngle in degrees.\n\t *\n\t * In most cases it will be set by the chart/series and does not need to\n\t * be set manually.\n\t */\n\tlabelAngle?: number;\n\n\t/**\n\t * Should the text \"face\" inward or outward from the arc the text is\n\t * following.\n\t *\n\t * `\"auto\"` means that facing will be chosen automatically based on the angle\n\t * to enhance readbility.\n\t *\n\t * Only applies if `type = \"circluar\"`.\n\t * \n\t * @default \"auto\"\n\t */\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\n\t/**\n\t * Should label be drawn inside (`true`) or outside (`false`) the arc.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n\t/**\n\t * Label type.\n\t *\n\t * * `\"regular\"` (default) - normal horizontal label.\n\t * * `\"circular\"` - arched label.\n\t * * `\"radial\"` - label radiating from the center of the arc.\n\t * * `\"aligned\"` - horizontal label aligned with other labels horizontally.\n\t * * `\"adjusted\"` - horizontal label adjusted in postion.\n\t *\n\t * **IMPORTANT!** If the label is used in a [[PieSeries]], its `alignLabels` setting\n\t * (default: `true`) takes precedence over `textType`. If you need to set this\n\t * to anything else than `regular`, make sure you also set `alignLabels: falese` on\n\t * `PieSeries`.\n\t *\n\t * @default \"regular\"\n\t */\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\n\t/**\n\t * Extra spacing between characters, in pixels.\n\t *\n\t * @default 0\n\t */\n\tkerning?: number;\n\n}\n\nexport interface IRadialLabelPrivate extends ILabelPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tleft?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tradius?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius?: number;\n\n}\n\nexport class RadialLabel extends Label {\n\n\tdeclare public _settings: IRadialLabelSettings;\n\tdeclare public _privateSettings: IRadialLabelPrivate;\n\n\tdeclare protected _text: RadialText;\n\n\tpublic static className: string = \"RadialLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([RadialLabel.className]);\n\n\tprotected _flipped: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis._textKeys.push(\"textType\", \"kerning\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(RadialText.new(this._root, {}));\n\t}\n\n\t/**\n\t * Returns base radius in pixels.\n\t * \n\t * @return Base radius\n\t */\n\tpublic baseRadius(): number {\n\t\tconst radiusPrivate = this.getPrivate(\"radius\", 0);\n\t\tconst innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n\t\tconst baseRadius = this.get(\"baseRadius\", 0);\n\t\treturn innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n\t}\n\n\t/**\n\t * Returns radius adjustment in pixels.\n\t * \n\t * @return Radius\n\t */\n\tpublic radius(): number {\n\t\tconst inside = this.get(\"inside\", false);\n\t\treturn this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n\n\t\t\tconst textType = this.get(\"textType\", \"adjusted\");\n\n\t\t\tconst inside = this.get(\"inside\", false);\n\n\t\t\tconst orientation = this.get(\"orientation\");\n\t\t\tlet labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n\n\t\t\tthis._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n\t\t\tthis._text.set(\"inside\", inside);\n\n\t\t\tconst sin = $math.sin(labelAngle);\n\t\t\tconst cos = $math.cos(labelAngle);\n\n\t\t\tlet baseRadius = this.baseRadius();\n\t\t\tlet radius = this.radius();\n\n\t\t\tthis._display.angle = 0;\n\n\t\t\tif (textType == \"circular\") {\n\n\t\t\t\tthis.setAll({\n\t\t\t\t\tpaddingTop: 0,\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingRight: 0\n\t\t\t\t});\n\n\t\t\t\t// Circular labels are handled and positioned differently\n\n\t\t\t\tthis._text.set(\"orientation\", orientation);\n\t\t\t\tthis._text.set(\"radius\", radius);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (baseRadius == 0) {\n\t\t\t\t\tlabelAngle = 0;\n\t\t\t\t\tradius = 0;\n\t\t\t\t}\n\n\t\t\t\t// Positioning of radial/regular labels are teh same\n\t\t\t\tlet x = radius * cos;\n\t\t\t\tlet y = radius * sin;\n\n\t\t\t\tif (textType == \"radial\") {\n\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\n\t\t\t\t\tif ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\n\t\t\t\t\t\tthis._display.angle = labelAngle;// + 90;\n\t\t\t\t\t\tthis._flipped = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._display.angle = labelAngle + 180;\n\t\t\t\t\t\tthis._flipped = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._dirty.rotation = false;\n\t\t\t\t}\n\t\t\t\telse if (textType == \"adjusted\") {\n\t\t\t\t\tthis.setRaw(\"centerX\", p50);\n\t\t\t\t\tthis.setRaw(\"centerY\", p50);\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t\telse if (textType == \"regular\") {\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n\n\tpublic _updatePosition() {\n\n\t\tconst textType = this.get(\"textType\", \"regular\");\n\t\tconst inside = this.get(\"inside\", false);\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\t\tlet labelAngle = this.get(\"labelAngle\", 0);\n\t\tlet bounds = this.localBounds();\n\t\tlet w = bounds.right - bounds.left;\n\t\tlet h = bounds.bottom - bounds.top;\n\n\t\tif (textType == \"radial\") {\n\t\t\tif (this._flipped) {\n\t\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\t\tif (centerX instanceof Percent) {\n\t\t\t\t\tw = w * (1 - centerX.value * 2);\n\t\t\t\t}\n\n\t\t\t\tdx = w * $math.cos(labelAngle);\n\t\t\t\tdy = w * $math.sin(labelAngle);\n\t\t\t}\n\t\t}\n\t\telse if (!inside && textType == \"adjusted\") {\n\t\t\tdx = w / 2 * $math.cos(labelAngle);\n\t\t\tdy = h / 2 * $math.sin(labelAngle);\n\t\t}\n\n\n\t\tthis.setRaw(\"dx\", dx);\n\t\tthis.setRaw(\"dy\", dy);\n\n\t\tsuper._updatePosition();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get text(): RadialText {\n\t\treturn this._text;\n\t}\n\n}\n","import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["AxisLabelRadial","RadialLabel","constructor","Object","defineProperty","classNames","concat","className","Label","_afterNew","this","_textKeys","push","super","_makeText","_text","children","RadialText","new","_root","baseRadius","radiusPrivate","getPrivate","innerRadiusPrivate","get","$utils","radius","inside","_updateChildren","isDirty","isPrivateDirty","textType","orientation","labelAngle","$math","set","sin","cos","_display","angle","setAll","paddingTop","paddingBottom","paddingLeft","paddingRight","x","y","setRaw","_flipped","_dirty","rotation","p50","markDirtyPosition","markDirtyBounds","_updatePosition","dx","dy","bounds","localBounds","w","right","left","h","bottom","top","centerX","Percent","value","text","Text","_renderer","makeRadialText","textStyle","_beforeChanged","clear","startAngle","kerning","CategoryAxis","Axis","_settings","themeTags","fields","setPrivateRaw","addTag","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","dataItem","Math","max","round","min","_sizeDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","_markDirtyAxes","key","openKey","otherAxis","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","renderer","minorLabelsEnabled","minorGridEnabled","maxCount","axisLength","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","count","_prepareDataItem","_a","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","position","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","baseValue","basePosition","getX","axisDataItem","positionToCoordinate","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","location","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","tooltip","_setDataItem","markDirtyText","getSeriesItem","fieldName","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","CategoryDateAxis","Number","MAX_SAFE_INTEGER","startTime","endTime","realDuration","baseDuration","gridInterval","$time","nextGridUnit","timeUnit","baseInterval","assign","formats","format","previousValue","Infinity","previousIndex","previousUnitValue","selectedItems","changed","skip","date","Date","unitValue","added","utc","pop","shouldAdd","item","dateFormatter","DurationAxis","ValueAxis","_adjustMinMax","gridCount","strictMode","minMaxStep","durationFormatter","getDurationFormatter","baseUnit","difference","abs","step","divisors","realDivisor","divisor","exponent","log","LOG10E","power","pow","reducedCount","getFormat","_formatText","formatter","extraDecimals","decimals","positionToValue","OHLC","Candlestick","_draw","display","moveTo","lineTo","width","height","lY","hY","lX","hX","OHLCSeries","CandlestickSeries","ListTemplate","Template","_new","columns","template","makeColumn","listTemplate","column","mainContainer","make","_processAxisRange","axisRange","SmoothedYLineSeries","LineSeries","_setDefault","curveMonotoneYTension","SmoothedXLineSeries","curveMonotoneXTension","SmoothedXYLineSeries","curveCardinal","tension","Step","context","t","_context","_t","stepAfter","prototype","areaStart","_line","areaEnd","lineStart","_x","_y","_point","lineEnd","closePath","point","x1","StepLineSeries","curveStepAfter","_getPoints","o","points","p100","itemLocationX0","locationX","itemLocationY0","locationY","itemLocationX1","itemLocationY1","xPos0","xField","vcx","yPos0","yField","vcy","xPos1","yPos1","_shouldInclude","iPoint0","getPoint","point0","iPoint1","point1","fillVisible","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","basePosY","basePosX","getOpen","valueX","xOpenField","valueY","yOpenField","openLocationX","openLocationY","stacked","stackToItemX","stackToItemY","component","closeIPoint0","closeIPoint1","segments","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}